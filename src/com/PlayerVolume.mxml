<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   horizontalScrollPolicy="off" 
		   verticalScrollPolicy="off"
		   useHandCursor="true" 
		   buttonMode="true" 
		   width="100"
		   height="28"
		   top="2" 
		   cornerRadius="2" 
		   borderStyle="solid" 
		   borderThickness="0" 
		   backgroundColor="{(StyleManager.getColorName(props.get('trayBackgroundColor')) as Number)}" 
		   backgroundAlpha="{(props.get('trayAlpha') as Number)}"
		   click="setVolumeTo((this.contentMouseX-5)/volumeOverlay.width)"
		   >
	<mx:Canvas
		id="volumeOverlay"
		top="11" 
		left="10" 
		right="10" 
		height="6" 
		backgroundColor="0xCCCCCC" 
		backgroundAlpha="0.6"
		>
		<mx:Canvas id="volumeLevel" 
				   x="0"
				   width="100%"
				   height="6"
				   backgroundColor="{(StyleManager.getColorName(props.get('trayBackgroundColor')) as Number)}" 
				   backgroundAlpha="0.6"
				   />		
	</mx:Canvas>
	<mx:Script>
		<![CDATA[
			import com.philemonworks.flex.util.HashCollection;
			
			import mx.controls.VideoDisplay;
			import mx.core.Application;
			import mx.events.DragEvent;
			import mx.events.VideoEvent;
			[bindable] private var props:HashCollection = mx.core.Application.application.props;
			[bindable] private var activeElement:HashCollection = mx.core.Application.application.activeElement;
			//private var video:mx.VideoDisplay = mx.core.Application.application.video;
			
			public function setVolumeTo(volume:Number):void {
				if (!_targetVideo) return;
				
				if (volume < 0) {
					volume = 0;
				} else if (volume > 0.96) {
					volume = 1;
				}

				_targetVideo.volume = volume;
				volumeLevel.width = volume * volumeOverlay.width;
			}
			
			private var _targetVideo:VideoDisplay;
			public function set targetVideo(v:VideoDisplay):void {
				_targetVideo = v;
			}
			public function get targetVideo():VideoDisplay {
				return _targetVideo;
			}
		]]>
	</mx:Script>
</mx:Canvas>
